
Міністерство освіти і науки України Харківський національний університет радіоелектроніки
Кафедра програмної інженерії











Лабораторна робота
з дисципліни: «Архітектура програмного забезпечення»
на тему: «Розробка опису проєкту в форматі «Vision and Scope»






Виконав:
ст. гр. ПЗПІ-22-9
Алексієнко Євгеній травня 2025 р. Перевірив:
Дашенков Д. С.





Харків 2025
 
1 РОЗРОБКА ОПИСУ ПРОТОТИПУ ПРОЄКТУ В ФОРМАТІ
«VISION AND SCOPE»
1.	Історія змін

Зміни в документі нотуються до таблиці 1.1. Таблиця 1.1 – Історія змін

№	Дата	Версія звіту	Опис змін та виправлень
1	02.05.25	0.1	Створено розділ «Історія змін»
2	02.05.25	0.1	Створено розділ «Завдання»
3	02.05.25	0.1	Створено розділ «Опис виконаної роботи»
4	02.05.25	0.1	Створено розділ «Висновки»
5	03.05.25	0.1	Додано додаток А з посиланням на відеоролик
6	03.05.25	0.1	Додано додаток Б з документом Vision & Scope
7			



1.2	Завдання


Мета завдання – створити документ Vision & Scope для програмної системи розумного моніторингу IoT пристроїв та управління датчиками температури і руху. Цей документ має чітко окреслити бачення та межі проєкту, визначаючи його актуальність, цілі, ключові функціональні можливості, а також основні технічні та організаційні аспекти.
Документ повинен служити спільною точкою орієнтації для всіх зацікавлених сторін — замовників, розробників, тестувальників, аналітиків та потенційних користувачів системи розумного моніторингу. Він допоможе уникнути розбіжностей у трактуванні вимог щодо функціональності IoT датчиків, MQTT комунікації, веб-додатка з аналітикою, адміністративної панелі та REST API, встановити єдине розуміння завдань і забезпечити контроль обсягу робіт на всіх етапах розробки системи Smart Monitoring з інтеграцією ШІ для аналізу даних та генерації рекомендацій.


1.3	Опис виконаної роботи


У процесі роботи було розроблено документ Vision & Scope, у якому чітко визначено бачення та межі проєкту програмної системи для розумного моніторингу IoT пристроїв та управління датчиками температури і руху. Документ охоплює всі ключові аспекти проєкту – від актуальності проблеми до технічних деталей реалізації.
У першому розділі описано соціальну та економічну значущість проблеми ефективного моніторингу мікроклімату та безпеки приміщень за допомогою IoT технологій, зокрема в контексті розумних будинків, офісних приміщень, складських комплексів та промислових об'єктів. Розглянуто існуючі рішення на ринку систем розумного моніторингу, проаналізовано їхні переваги та недоліки. Також запропоновано потенційні моделі монетизації з використанням ШІ-аналітики.
У другому розділі описано основну мету створення системи – автоматизацію процесів моніторингу, обліку та аналізу даних з датчиків температури та руху з підтримкою багатоканальних IoT пристроїв та інтелектуального аналізу даних.
У третьому розділі детально описано кожен із компонентів системи:
–	Backend: реалізація REST API на Node.js з MongoDB, обробка даних з IoT датчиків через MQTT протокол, управління користувачами та пристроями, забезпечення авторизації та автентифікації, інтеграція з Anthropic Claude для ШІ-аналізу;
–	Web-інтерфейс: зручна адмін-панель (React) для адміністраторів та інтерфейс для користувачів з можливістю перегляду показань температури та активності руху, налаштування пристроїв, аналізу історичних даних та перегляду ШІ рекомендацій;
–	Система пристроїв: IoT-пристрої ESP32 з підтримкою датчиків температури DHT22 та до 3 датчиків руху PIR, передача даних в реальному часі, налаштування граничних значень та сповіщень;
–	ШІ-аналітика: система аналізу трендів, виявлення аномалій, генерації персоналізованих рекомендацій та автоматичних звітів на базі машинного навчання.
Визначено технічні вимоги до кожної частини, включаючи необхідні бібліотеки, протоколи передачі даних (MQTT), типи взаємодії з користувачем, інтеграцію з IoT датчиками та ШІ сервісами.
У четвертому розділі розписано зацікавлені сторони. Описано попередній план-графік розробки проєкту та визначено основні технології для реалізації системи Smart Monitoring System з підтримкою штучного інтелекту.
Документ Vision & Scope наведено у додатку Б.




1.4	Висновки


Розроблений документ Vision & Scope створює чітке уявлення про проєкт розумного моніторингу IoT пристроїв та управління даними з датчиків температури і руху, його цілі та обсяг. Він стане основою для подальшої технічної документації, планування розробки системи Smart Monitoring System з інтеграцією штучного інтелекту та комунікації між усіма учасниками процесу розробки інноваційної IoT платформи.
 
Додаток А
Хронологічний опис та посилання


Відеозапис доповіді на YouTube: 


Хронологічний опис доповіді:

 
Додаток Б
Документ Vision and Scope

Vision and Scope Document
for
Secure Sense
Version 1.1 approved


Prepared by Євгеній Алексієнко


ст. гр. ПЗПІ-22-9
 
ЗМІСТ



Зміст	9
Журнал версій	10
1	Бізнес вимоги	11
1.1	Передумови	11
1.2	Бізнес-можливість	12
2	Концепція рішення	14
2.1	Окреслення концепції	14
2.2	Головна функціональність	14
3	Рамки та обмеження проєкту	16
3.1	Рамки первинного випуску	16
3.2	Рамки наступних випусків	18
3.3	Обмеження та винятки	20
4	Бізнес-контекст	21
4.1	Профілі зацікавлених сторін	21
4.2	Пріоритети проєкту	21
4.3	Робоче середовище	22









9
 
ЖУРНАЛ ВЕРСІЙ




Name	Date	Reason For Changes	Version
WeightMonitor	03.05.25	Створення документу	1.0
			
































10
 
1	Бізнес Вимоги
1.1	Передумови

Метою проєкту SecureSense є розробка IoT-системи безпеки, яка забезпечить надійний контроль доступу до житла, відстежуючи відкриття дверей і вікон у реальному часі. Ця система дозволить користувачам отримувати миттєві сповіщення про підозрілу активність, інтегруватися з іншими пристроями «розумного дому» та забезпечувати додатковий рівень захисту через мобільний додаток або веб-інтерфейс. Основна цільова аудиторія — власники житла, агентства з управління нерухомістю та охоронні компанії, яким потрібен ефективний інструмент моніторингу.
Продукт орієнтований на розширення ринку завдяки продажу IoT- пристроїв, підписок на розширені функції та партнерству з охоронними агентствами. Основні переваги системи включають інтеграцію з відеоспостереженням, налаштовувані сповіщення та аналітику для виявлення аномалій. Завдяки зручності у використанні, масштабованості та підтримці сучасних технологій, SecureSense стане надійним рішенням для безпеки житла, задовольняючи потреби як окремих користувачів, так і компаній.

1.2	Бізнес-можливість

На ринку розумних технологій для дому існує значний попит на доступні та інтегровані системи безпеки, які дозволяють оперативно реагувати на потенційні загрози. Більшість існуючих рішень або надто дорогі, або обмежені у функціональності, що	 створює прогалину для продукту, такого як SecureSense. Наш продукт поєднує  IoT-датчики, інтеграцію  з іншими розумними пристроями та зручний інтерфейс, забезпечуючи унікальну комбінацію зручності, функціональності та вартості. Продукт особливо привабливий для власників житла, які прагнуть додаткового захисту, а також для компаній з управління нерухомістю, яким потрібні масштабовані рішення. SecureSense вирішує проблему недостатньої гнучкості існуючих систем, пропонуючи розширені функції, такі як геозонування, історія подій та інтеграція з системами відеоспостереження. Цей підхід відповідає трендам ринку на  впровадження  IoT-рішень  і підтримує стратегічний напрямок компанії на розробку високоякісних цифрових продуктів.
 
2	Концепція Рішення
2.1	Окреслення концепції

SecureSense — це універсальна система безпеки для житла, яка об'єднує IoT-датчики, аналітику та інтеграцію з іншими пристроями «розумного дому». Вона забезпечує захист житла в реальному часі, дозволяючи користувачам контролювати доступ до приміщень, отримувати миттєві сповіщення та аналізувати дані про безпеку. SecureSense прагне стати стандартом у сфері доступних і зручних систем домашньої безпеки.

2.2	Головна функціональність

MF-1 Моніторинг доступу:
Система забезпечує збір і відображення даних про відкриття дверей та вікон у реальному часі. Інформація включає часові мітки, тип дії (відкриття чи закриття) та стан пристроїв. Це дозволяє користувачам отримувати повний контроль над станом свого житла та миттєво реагувати на будь-які підозрілі дії.
MF-2 Персоналізовані сповіщення:
На основі аналізу дій система налаштовує сповіщення відповідно до потреб користувача. Наприклад, вона може надсилати сповіщення про відкриття дверей, коли власник знаходиться поза домом, або регулювати чутливість повідомлень залежно від геозонування чи звичних сценаріїв використання.
MF-3 Нагадування про безпеку:
Система нагадує користувачам про незакриті вікна чи двері перед тим, як вони залишать приміщення. Крім того, вона може пропонувати додаткові заходи для підвищення безпеки, наприклад, замикання дверей або активацію додаткових режимів захисту у випадках тривоги.
MF-4 Інтеграція з іншими пристроями:
Система синхронізується з IoT-пристроями, такими як розумні замки, відеокамери або системи сигналізації. Це дозволяє автоматизувати процеси, наприклад, блокування замків або ввімкнення відеозапису у разі активації датчиків, що підвищує загальний рівень захисту житла.
MF-5 Аналіз доступу в реальному часі:
Мобільний додаток надає користувачам актуальну інформацію про стан доступу, включаючи історію дій, поточний статус дверей та вікон, а також аналітику щодо незвичних дій. Це дозволяє швидко оцінювати безпеку приміщення та приймати обґрунтовані рішення у разі виявлення загроз.
–	.
 
3	Рамки Та Обмеження Проєкту
3.1	Рамки первинного випуску

Початкова версія продукту включатиме основний функціонал, спрямований на забезпечення базового рівня безпеки житла через IoT- рішення. Цей реліз створює фундамент для подальшого розвитку системи та включає такі функції:
Моніторинг доступу:
Реалізація функціональності для фіксації відкриття та закриття дверей і вікон за допомогою IoT-датчиків. Система відображає поточний статус доступу в реальному часі у мобільному додатку.
Сповіщення через мобільний додаток:
Автоматичні push-сповіщення про виявлені події, такі як несанкціоноване відкриття або залишені відкритими вікна. Сповіщення налаштовуються залежно від уподобань користувача, включаючи час, місце та рівень тривоги.
Збір і збереження даних про події:
Усі події, пов’язані з відкриттям і закриттям дверей чи вікон, будуть зберігатися у хмарному сховищі. Це дозволить користувачам отримувати доступ до історії подій для аналізу.
Базова інтеграція з відеоспостереженням:
Інтеграція з базовими системами відеоспостереження дозволяє переглядати відеозаписи з камер у момент отримання сповіщення про подію. Це сприяє кращому розумінню ситуації у разі тривоги.
Передбачено базові інструменти адміністрування для створення користувачів, налаштування прав доступу та управління системними параметрами. У першому релізі реалізовано сервер з базовими алгоритмами для контролю, обліку та аналізу інформації, що дозволяє ефективно моніторити процеси зважування на підприємствах та в домогосподарствах.
Система буде доступною для використання:
–	на персональних комп'ютерах через веб-інтерфейс;
–	на сервері для централізованого моніторингу;
–	на мобільних пристроях.
Програмне забезпечення серверної частини системи:
Функції серверної частини:
–	REST API для веб-інтерфейсу та мобільного клієнта;
–	обробка даних від IoT-пристроїв зважування (ваги, датчики навантаження);
–	авторизація та автентифікація;
–	робота з базою даних (MongoDB);
–	валідація даних, контроль відповідності метрологічним вимогам.
Вимоги до серверної частини:
–	мова: Node.js;
–	база даних: MongoDB;
–	архітектура: REST;
–	масштабованість, модульність.
Веб-застосунок:
Веб-інтерфейс використовується для адміністрування та користувацького доступу.
Функції:
–	управління користувачами та ролями (для адмінки);
–	створення, редагування, видалення облікових записів (для адмінки);
–	призначення ролей (для адмінки);
–	налаштування прав доступу (для адмінки);
–	перегляд даних (для всіх користувачів);
–	доступ до логування подій.
Вимоги:
–	розробка на React (з використанням сучасних компонентів);
–	доступ через браузер;
–	безпечна автентифікація;
–	зручний інтерфейс для моніторингу показників ваги з багатоканальних пристроїв;
–	збереження даних у MongoDB.
Мобільний застосунок:
Функції:
–	доступ до ключових даних про показники ваги для користувачів;
–	перегляд звітів та основних показників зважування.
Вимоги:
–	розробка на Kotlin;
–	безпечна автентифікація;
–	зручний інтерфейс для швидкого перегляду вагових даних.
Програмне забезпечення пристрою IoT:
Взаємодія з IoT-пристроями зважування, такими як датчики навантаження та ваги, встановлені на виробничому обладнанні, складських системах та домашніх пристроях. Реалізовано автоматичний збір, обробку та відображення вагових даних у реальному часі.
Функції:
–	Збір та передача даних з пристроїв;
–	Надсилання даних на сервер у реальному часі через MQTT;
–	Аналіз поточних показників порівняно з граничними значеннями;
–	Збереження історії змін вагових показників для трасування процесів.
Вимоги:
–	Підключення до мережі Wi-Fi або мобільного інтернету;
–	Пристрої зважування з підтримкою MQTT протоколу;
–	Налаштування інтервалів зчитування показників ваги.
Система складається з трьох основних компонентів: мобільного застосунку, веб-застосунку та серверної частини. Всі компоненти взаємодіють через REST API. Також підключено IoT-пристрої для моніторингу показників ваги у реальному часі

3.2	Рамки наступних випусків

У наступних релізах SecureSense буде розширювати свою функціональність, орієнтуючись на вдосконалення користувацького досвіду, глибшу інтеграцію з іншими системами та підвищення рівня автоматизації. Основні функції, які будуть додані:
1.	Розширена аналітика даних:
Система надаватиме користувачам більш детальні звіти про використання та події. Аналітика включатиме виявлення шаблонів поведінки (наприклад, звичний час відкриття/закриття дверей), аналіз аномалій та автоматичне попередження про підозрілу активність. Користувачі також отримають доступ до статистики, що дозволить краще планувати заходи безпеки.
2.	Автоматизація замків:
Інтеграція розумних замків дозволить автоматично блокувати двері у випадку спрацювання датчиків. Наприклад, система зможе автоматично закривати двері, якщо вони були залишені відкритими, або активувати блокування після виходу власника з приміщення на основі геозонування. Це підвищить рівень безпеки та зменшить ризик несанкціонованого доступу.
3.	Більш глибока інтеграція з іншими платформами «розумного дому»:
Планується розширення підтримки екосистем популярних брендів, таких як Google Home, Amazon Alexa та Apple HomeKit. Це дозволить
користувачам синхронізувати SecureSense з іншими пристроями, такими як розумні термостати, системи освітлення або камери спостереження, для створення комплексних сценаріїв безпеки. Наприклад, під час активації
датчика система може не лише заблокувати двері, але й увімкнути освітлення або надіслати сигнал на сигналізацію.
4.	Підтримка голосових команд:
В наступних релізах планується реалізація голосового управління через інтеграцію з віртуальними асистентами, що зробить користування системою ще зручнішим.
5.	Розширена конфігурація налаштувань:
Користувачі зможуть детально налаштовувати систему відповідно до своїх потреб, включаючи сценарії поведінки у різних ситуаціях, індивідуальні рівні чутливості датчиків та режими роботи для різних періодів доби.
Ці функції не лише розширять можливості системи, але й зроблять її більш привабливою для широкого кола користувачів, закріпивши конкурентну перевагу SecureSense на ринку.

3.3	Обмеження та винятки

Початкова версія SecureSense матиме обмеження, зумовлені фокусом на базовій функціональності та забезпеченні надійності роботи. Зокрема, система не підтримуватиме автономну роботу без підключення до інтернету, що робить її залежною від стабільності мережі для передачі даних і сповіщень. Крім того, у першій версії буде відсутня розширена інтеграція зі сторонніми охоронними агентствами, що обмежує можливість безпосередньої взаємодії з професійними службами безпеки. Система також не включатиме підтримку додаткових модулів автоматизації, таких як розумні замки або повноцінні сценарії роботи з іншими платформами «розумного дому», що планується реалізувати у наступних релізах. Ці обмеження дозволяють зосередитися на базовій версії продукту та забезпечити її швидкий запуск на ринок.
.
 
4	Бізнес-Контекст
4.1	Профілі зацікавлених сторін

У проєкті беруть участь наступні зацікавлені сторони:
–	Користувачі (домогосподарства, підприємства);
–	Технічний персонал: обслуговування IoT-пристроїв;
–	Адміністратори: приймають рішення про впровадження;
–	Регулюючі органи: отримувачі звітів;
–	Інвестори: джерело фінансування;
–	Розробники/технічна команда: реалізація і підтримка.


4.2	Пріоритети проєкту

Опишемо строки виконання у таблиці 4.1.


Таблиця 4.1 – Календарний план

Етап	Тривалість	Дії
1. Аналіз вимог та дизайн	1 тижні	Збір вимог, проектування БД,
створення мокапів
2. Розробка бекенду (MVP)	3 тижні	Створення REST API -
базовий облік
3. IoT-модуль (прототип)	2 тижні	Створення IOT
4. Веб-клієнт	4 тижні	Повний веб- клієнт з адмiн сторiнкою
5. Мобільний застосунок	3 тижні	Створення базового мобайлу для IOS та Android
6. Тестування та
документування	2 тижні	Тестування та підготовка
документації
7. Розгортання і презентація	1 тиждень	Демо
 
4.3.	Робоче середовище

Програмні технології, які будуть використані у серверній частині програмної системи, включають Node.js як основну мову розробки та фреймворк Express для побудови REST API. Для автентифікації та авторизації користувачів буде використано middleware, сумісне з JSON Web Tokens (JWT), а для доступу до бази даних MongoDB — драйвер Mongoose, що використовується для зберігання інформації про користувачів, дані температури та руху, параметри роботи IoT пристроїв моніторингу. Додатково інтегровано API Anthropic Claude для ШІ-аналізу даних та генерації персоналізованих рекомендацій.
Програмні технології, які будуть використані у програмному забезпеченні пристроїв інтернету речей, передбачають використання протоколу MQTT для обміну повідомленнями між IoT-пристроями моніторингу (зокрема датчиками температури DHT22, датчиками руху PIR) та сервером, а також спеціалізованих бібліотек, сумісних з цим протоколом. Пристрої ESP32 будуть налаштовані на передачу даних температури, вологості та активності руху у реальному часі до центрального серверу для моніторингу показників мікроклімату та безпеки.
Програмні технології, які будуть використані у веб-клієнтській частині програмної системи, базуються на мові програмування JavaScript з використанням фреймворка React для розробки адаптивного та інтерактивного користувацького інтерфейсу для взаємодії з системою через браузер. Інтерфейс включатиме дашборди для відображення аналітики, графіків температурних трендів та ШІ рекомендацій.
Захист даних у програмній системі буде забезпечено за допомогою шифрування інформації, що зберігається у базі даних, із застосуванням стандарту AES-256. Крім того, для безпечного доступу користувачів реалізовано автентифікацію та авторизацію через JWT із підтримкою ролей та прав доступу. MQTT комунікація захищена через TLS шифрування.
Адміністрування програмної системи здійснюватиметься через окрему адміністративну панель (React-based), доступ до якої матимуть лише користувачі з відповідними правами. Через цю панель адміністратор зможе керувати користувачами, моніторити роботу системи, перевіряти логування подій моніторингу температури та руху, керувати системними налаштуваннями та переглядати глобальну аналітику з усіх пристроїв.
Резервне копіювання даних і налаштувань програмної системи виконуватиметься автоматично щодня за допомогою скриптів, що створюють резервні копії бази даних MongoDB та конфігураційних файлів сервера. Також передбачено TTL індекси для автоматичної очистки застарілих даних датчиків.
Налаштування пристрою інтернету речей здійснюватиметься через інтерфейс конфігурації, який дозволить підключити новий IoT пристрій до системи, задати порогові значення для датчиків температури та чутливість датчиків руху, налаштувати зони моніторингу та перевірити з'єднання з сервером через MQTT-брокер. Кожен пристрій отримує унікальний ідентифікатор у форматі YYYYMMDD-userID-5randmSymbols.
Мовами, якими буде локалізована програмна система в наступних випусках, є українська та англійська. Українська мова використовується як основна, тоді як англійська забезпечує доступ для потенційних міжнародних користувачів та персоналу, що не володіє українською.
Інтернаціоналізація програмної системи забезпечується за допомогою зовнішніх ресурсних файлів, які містять текстові повідомлення різними мовами. У веб-клієнті буде реалізовано механізм вибору мови, який надасть можливість користувачеві змінити мову вручну. ШІ рекомендації також локалізуються відповідно до обраної мови користувача.
Посилання на GitHub: 
